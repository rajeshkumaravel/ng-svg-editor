{"ast":null,"code":"import _asyncToGenerator from \"/Users/rajesh/Workspace/projects/ekstep/ng-svg-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TestBed } from '@angular/core/testing';\nimport { SvgEditorComponent } from './svg-editor.component';\ndescribe('SvgEditorComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [SvgEditorComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(SvgEditorComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should create SVG element based on input params', () => {\n    const _svgString = '<svg height=\"30\" width=\"200\"><text x=\"0\" y=\"15\" fill=\"red\">Sample SVG String</text></svg>';\n    component.svgContent = _svgString;\n    fixture.detectChanges();\n    const svgElement = document.getElementById('templateSvg');\n    expect(svgElement).toBeTruthy();\n    expect(svgElement === null || svgElement === void 0 ? void 0 : svgElement.innerHTML).toBe('Sample SVG String');\n  });\n  it('should draw edit icon for given SVG file', () => {\n    const _svgString = '<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:se=\"http://svg-edit.googlecode.com\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 841.9 595.3\" style=\"background:#fff\"><text x=\"0\" y=\"15\" fill=\"red\">Sample SVG String</text></svg>';\n    component.svgContent = _svgString;\n    fixture.detectChanges();\n    const svgElement = document.getElementById('templateSvg');\n    component.generateMaskForSvgElements();\n    console.log('_______ ', document.getElementById('templateSvg')); // TODO: log!\n\n    expect(svgElement).toBeTruthy();\n  });\n});","map":{"version":3,"sources":["/Users/rajesh/Workspace/projects/ekstep/ng-svg-editor/projects/svg-editor/src/lib/svg-editor.component.spec.ts"],"names":["TestBed","SvgEditorComponent","describe","component","fixture","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","_svgString","svgContent","svgElement","document","getElementById","innerHTML","toBe","generateMaskForSvgElements","console","log"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACAC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACjC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAML,OAAO,CAACM,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACN,kBAAD;AADmB,KAA/B,EAGDO,iBAHC,EAAN;AAIH,GALS,EAAV;AAMAH,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGJ,OAAO,CAACS,eAAR,CAAwBR,kBAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACM,iBAApB;AACAN,IAAAA,OAAO,CAACO,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACV,SAAD,CAAN,CAAkBW,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AACxD,UAAMG,UAAU,GAAG,2FAAnB;AACAZ,IAAAA,SAAS,CAACa,UAAV,GAAuBD,UAAvB;AACAX,IAAAA,OAAO,CAACO,aAAR;AACA,UAAMM,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACAN,IAAAA,MAAM,CAACI,UAAD,CAAN,CAAmBH,UAAnB;AACAD,IAAAA,MAAM,CAACI,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACG,SAApE,CAAN,CAAqFC,IAArF,CAA0F,mBAA1F;AACH,GAPC,CAAF;AAQAT,EAAAA,EAAE,CAAC,0CAAD,EAA6C,MAAM;AACjD,UAAMG,UAAU,GAAG,+SAAnB;AACAZ,IAAAA,SAAS,CAACa,UAAV,GAAuBD,UAAvB;AACAX,IAAAA,OAAO,CAACO,aAAR;AACA,UAAMM,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;AACAhB,IAAAA,SAAS,CAACmB,0BAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAxB,EANiD,CAMgB;;AACjEN,IAAAA,MAAM,CAACI,UAAD,CAAN,CAAmBH,UAAnB;AACH,GARC,CAAF;AASH,CAlCO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { SvgEditorComponent } from './svg-editor.component';\ndescribe('SvgEditorComponent', () => {\n    let component;\n    let fixture;\n    beforeEach(async () => {\n        await TestBed.configureTestingModule({\n            declarations: [SvgEditorComponent]\n        })\n            .compileComponents();\n    });\n    beforeEach(() => {\n        fixture = TestBed.createComponent(SvgEditorComponent);\n        component = fixture.componentInstance;\n        fixture.detectChanges();\n    });\n    it('should create', () => {\n        expect(component).toBeTruthy();\n    });\n    it('should create SVG element based on input params', () => {\n        const _svgString = '<svg height=\"30\" width=\"200\"><text x=\"0\" y=\"15\" fill=\"red\">Sample SVG String</text></svg>';\n        component.svgContent = _svgString;\n        fixture.detectChanges();\n        const svgElement = document.getElementById('templateSvg');\n        expect(svgElement).toBeTruthy();\n        expect(svgElement === null || svgElement === void 0 ? void 0 : svgElement.innerHTML).toBe('Sample SVG String');\n    });\n    it('should draw edit icon for given SVG file', () => {\n        const _svgString = '<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\" xmlns:se=\"http://svg-edit.googlecode.com\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 841.9 595.3\" style=\"background:#fff\"><text x=\"0\" y=\"15\" fill=\"red\">Sample SVG String</text></svg>';\n        component.svgContent = _svgString;\n        fixture.detectChanges();\n        const svgElement = document.getElementById('templateSvg');\n        component.generateMaskForSvgElements();\n        console.log('_______ ', document.getElementById('templateSvg')); // TODO: log!\n        expect(svgElement).toBeTruthy();\n    });\n});\n"]},"metadata":{},"sourceType":"module"}